steps:
  # Run the unit tests
  - name: maven:3-openjdk-8
    id: "mvn-test"
    entrypoint: mvn
    args: ["test"]
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/${PROJECT_ID}/mvm-service", "."]
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/mvm-service"]
  # Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "beta",
        "run",
        "deploy",
        "mvm-service",
        "--image",
        "gcr.io/${PROJECT_ID}/mvm-service",
        "--set-env-vars=SPRING_DATASOURCE_URL=${_SPRING_DATASOURCE_URL},PUBLISHER_ENABLED=${_PUBLISHER_ENABLED},PUBLISHER_GOOGLE_PROJECT_ID=${_PUBLISHER_GOOGLE_PROJECT_ID}",
        "--update-secrets=STRIPE_API_KEY=projects/${PROJECT_NUMBER}/secrets/stripe_api_key/versions/latest",
        "--update-secrets=STRIPE_ENDPOINT_SECRET=projects/${PROJECT_NUMBER}/secrets/stripe_endpoint_secret/versions/latest",
        "--region",
        "europe-west1",
        "--platform",
        "managed",
        "--cpu",
        "4",
        "--memory",
        "8Gi",
        "--allow-unauthenticated",
        "--min-instances=1",
        "--max-instances=8",
        "--service-account",
        "service-cloudrun@${PROJECT_ID}.iam.gserviceaccount.com",
      ]
substitutions:
  _ENV: "dev"
  _SPRING_DATASOURCE_URL: "jdbc:postgresql://34.140.78.47:5432/optimizer_${_ENV}"
  _PUBLISHER_ENABLED: "true"
  _PUBLISHER_GOOGLE_PROJECT_ID: ${PROJECT_ID}
images: ["gcr.io/${PROJECT_ID}/mvm-service"]
